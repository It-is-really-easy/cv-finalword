_base_ = [
    '../_base_/models/mask_rcnn_r50_fpn.py',
    '../_base_/datasets/coco_instance.py',
    '../_base_/schedules/schedule_1x.py', '../_base_/default_runtime.py'
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=8,
)

model = dict(
    # type='FasterRCNN',
    backbone=dict(
        # type='ResNet',
        # depth=50,
        # num_stages=4,
        # out_indices=(0, 1, 2, 3),
        # frozen_stages=1,
        # norm_cfg=dict(type='BN', requires_grad=True),
        # norm_eval=True,
        # style='pytorch',
        # with_cp=True,
        # dcn=dict( 
        #     #在最后三个block加入可变形卷积 
        #     # type='DCNv2',
        #     # type='FreqDecomp_DCNv2',
        #     # k_list=[8/1, 8/2, 8/3, 8/4, 8/5, 8/6, 8/7][::-1],
        #     # fs_feat='feat',
        #     # lp_type='freq',
        #     # # lp_type='freq_channel_att',
        #     # act='sigmoid',
        #     # channel_group=1,
        #     # channel_bn=False,
        #     # deformable_groups=1, 
        #     # type='AdaDilatedConv',
        #     type='FADCv2',
        #     offset_freq=None,
        #     epsilon=1e-4,
        #     use_zero_dilation=False,
        #     # offset_freq='SLP_res',
        #     deformable_groups=1, 
        #     padding_mode='repeat',
        #     kernel_decompose='both',
        #     # kernel_decompose='dct',
        #     use_std=False,
        #     # use_pool='adagpool',
        #     # use_pool='freqpool',
        #     # pool_type=['hfsimpool', 'hfsimpool'],
        #     pool_type=['avgpool', 'avgpool'],
        #     ca_type='se',
        #     # ca_type='eca_se',
        #     # ca_type='star_se',
        #     # pre_fs=False,
        #     pre_fs=True,
        #     # conv_type='multifreqband',
        #     conv_type='conv',
        #     aliasing_map_cfg=None,
        #     # aliasing_map_cfg=True,
        #     # fs_cfg=None,
        #     fs_cfg={
        #         'k_list':[2,4,8],
        #         'fs_feat':'feat',
        #         'lowfreq_att':False,
        #         'lp_type':'freq',
        #         # 'lp_type':'laplacian',
        #         'act':'sigmoid',
        #         'spatial':'conv',
        #         'spatial_group':1,
        #     },
        #     sp_att=False,
        #     fallback_on_stride=False),
        # stage_with_dcn=(False, True, True, True),
    ),
    neck=dict(
        type='FAFPN',
    ),
)